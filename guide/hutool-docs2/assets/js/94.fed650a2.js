(window.webpackJsonp=window.webpackJsonp||[]).push([[94],{423:function(t,s,a){"use strict";a.r(s);var n=a(7),e=Object(n.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h2",{attrs:{id:"由来"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#由来"}},[t._v("#")]),t._v(" 由来")]),t._v(" "),s("p",[t._v("在Java的String对象中提供了split方法用于通过某种字符串分隔符来把一个字符串分割为数组。但是有的时候我们对这种操作有不同的要求，默认方法无法满足，这包括：")]),t._v(" "),s("ul",[s("li",[t._v("分割限制分割数")]),t._v(" "),s("li",[t._v("分割后每个字符串是否需要去掉两端空格")]),t._v(" "),s("li",[t._v("是否忽略空白项")]),t._v(" "),s("li",[t._v("根据固定长度分割")]),t._v(" "),s("li",[t._v("通过正则分隔")])]),t._v(" "),s("p",[t._v("因此，"),s("code",[t._v("StrSplitter")]),t._v("应运而生。"),s("code",[t._v("StrSplitter")]),t._v("中全部为静态方法，方便快捷调用。")]),t._v(" "),s("h2",{attrs:{id:"方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#方法"}},[t._v("#")]),t._v(" 方法")]),t._v(" "),s("h3",{attrs:{id:"基础方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#基础方法"}},[t._v("#")]),t._v(" 基础方法")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("split")]),t._v(" 切分字符串，众多可选参数，返回结果为List")]),t._v(" "),s("li",[s("code",[t._v("splitToArray")]),t._v(" 切分字符串，返回结果为数组")]),t._v(" "),s("li",[s("code",[t._v("splitByRegex")]),t._v(" 根据正则切分字符串")]),t._v(" "),s("li",[s("code",[t._v("splitByLength")]),t._v(" 根据固定长度切分字符串")])]),t._v(" "),s("p",[t._v("栗子：")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" str1 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"a, ,efedsfs,   ddf"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//参数：被切分字符串，分隔符逗号，0表示无限制分片数，去除两边空格，忽略空白项")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("List")]),s("span",{pre:!0,attrs:{class:"token generics"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" split "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("StrSplitter")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("split")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("str1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token char"}},[t._v("','")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("h3",{attrs:{id:"特殊方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#特殊方法"}},[t._v("#")]),t._v(" 特殊方法")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("splitPath")]),t._v(' 切分字符串，分隔符为"/"')]),t._v(" "),s("li",[s("code",[t._v("splitPathToArray")]),t._v(' 切分字符串，分隔符为"/"，返回数组')])])])}),[],!1,null,null,null);s.default=e.exports}}]);