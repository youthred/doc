(window.webpackJsonp=window.webpackJsonp||[]).push([[140],{465:function(t,a,s){"use strict";s.r(a);var n=s(7),e=Object(n.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h2",{attrs:{id:"由来"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#由来"}},[t._v("#")]),t._v(" 由来")]),t._v(" "),a("p",[t._v("Hutool-db是一个在JDBC基础上封装的数据库操作工具类，通过包装，使用ActiveRecord思想操作数据库。在Hutool-db中，使用Entity（本质上是个Map）代替Bean来使数据库操作更加灵活，同时提供Bean和Entity的转换来提供传统ORM的兼容支持。")]),t._v(" "),a("h2",{attrs:{id:"整体的架构"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#整体的架构"}},[t._v("#")]),t._v(" 整体的架构")]),t._v(" "),a("p",[t._v("整体分为几部分:")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://static.oschina.net/uploads/img/201712/28150856_Yu1z.png",alt:""}})]),t._v(" "),a("ol",[a("li",[t._v("数据源 "),a("code",[t._v("DataSource")])]),t._v(" "),a("li",[t._v("SQL执行器 "),a("code",[t._v("SqlExecutor")])]),t._v(" "),a("li",[t._v("CRUD的封装 "),a("code",[t._v("Db")]),t._v("、"),a("code",[t._v("SqlConnRunner")]),t._v(" "),a("code",[t._v("SqlRunner")])]),t._v(" "),a("li",[t._v("支持事务的CRUD封装 "),a("code",[t._v("Session")])]),t._v(" "),a("li",[t._v("各种结果集处理类 "),a("code",[t._v("handler")])]),t._v(" "),a("li",[t._v("数据库的一些工具方法汇总 "),a("code",[t._v("DbUtil")])])]),t._v(" "),a("p",[t._v("还有就是没有列出来的dialect（数据库方言），我会根据给定的DataSource、Connection等对象自动识别是什么数据库，然后使用不同的方言构造SQL语句，暂时支持的数据库有MySQL、Oracle、SqlLite3，当然如果识别失败会用ANSI SQL，这样遇到不支持的数据库，也可以搞定大部分方法。")]),t._v(" "),a("p",[t._v("下面解释下：")]),t._v(" "),a("h3",{attrs:{id:"crud的封装-db-sqlconnrunner-sqlrunner"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#crud的封装-db-sqlconnrunner-sqlrunner"}},[t._v("#")]),t._v(" CRUD的封装 "),a("code",[t._v("Db")]),t._v(" "),a("code",[t._v("SqlConnRunner")]),t._v(" "),a("code",[t._v("SqlRunner")])]),t._v(" "),a("p",[t._v("这两个类有些相似，里面都封装了增、删、改、查、分页、个数方法，差别是"),a("code",[t._v("SqlConnRunner")]),t._v("需要每个方法都传Connection对象，而"),a("code",[t._v("SqlRunner")]),t._v("继承自"),a("code",[t._v("SqlConnRunner")]),t._v("，在传入DataSource后会自动获取Connection对象。")]),t._v(" "),a("h3",{attrs:{id:"各种结果集处理类-handler"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#各种结果集处理类-handler"}},[t._v("#")]),t._v(" 各种结果集处理类 "),a("code",[t._v("handler")])]),t._v(" "),a("p",[t._v("此包中有个叫做"),a("code",[t._v("RsHandler")]),t._v("的接口，传入ResultSet对象，返回什么则在handle方法中自己指定。\n实现的类有：")]),t._v(" "),a("ol",[a("li",[a("code",[t._v("EntityListHandler")]),t._v(" 转换为Entity列表")]),t._v(" "),a("li",[a("code",[t._v("NumberHandler")]),t._v(" 当使用"),a("code",[t._v("select count(1)")]),t._v("这类语句的时候，或者返回只有一个结果，且为数字结果的时候，用这个handler")]),t._v(" "),a("li",[a("code",[t._v("EntityHandler")]),t._v(" 返回一条记录的时候用这个")])]),t._v(" "),a("h3",{attrs:{id:"数据库的一些工具方法汇总"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#数据库的一些工具方法汇总"}},[t._v("#")]),t._v(" 数据库的一些工具方法汇总")]),t._v(" "),a("p",[a("code",[t._v("DbUtil")]),t._v("\n提供一些工具方法，最常用的就是"),a("code",[t._v("close")]),t._v("方法了，由于JDK7才把"),a("code",[t._v("ResultSet")]),t._v("、"),a("code",[t._v("Statement")]),t._v("、"),a("code",[t._v("PreparedStatement")]),t._v("、"),a("code",[t._v("Connection")]),t._v("这几个接口实现了Closeable接口，所以之前只能判断类型再去关闭，这样一个close方法可以关闭多个对象。")]),t._v(" "),a("h2",{attrs:{id:"对象解释"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#对象解释"}},[t._v("#")]),t._v(" 对象解释")]),t._v(" "),a("h3",{attrs:{id:"_1-entity"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-entity"}},[t._v("#")]),t._v(" 1. Entity")]),t._v(" "),a("p",[t._v("在ORM中，我把一张表中的一条数据映射成为一个叫做Entity的类，继承自HashMap，key是字段名，value是Object类型，字段值，这样一个Entity对象就是数据库表中的一条记录，当然这个对象中还有个字段是表的名字，方便之后的操作。之后对数据库增删改查操作的对象大多是这个。")]),t._v(" "),a("p",[t._v("这个对象充当着两种角色，一个是数据的载体，表示一条数据，另一个就是where语句的条件，充当where条件时，key依旧是字段名，value是字段条件值。例如：")]),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Entity")]),t._v(" where "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Entity")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("create")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("TABLE_NAME")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("set")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"条件1"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"条件值"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("表示的where语句是：")]),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("WHERE")]),t._v(" `条件"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("` "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" 条件值\n")])])]),a("p",[t._v("当然到时候会用PreparedStatement，不会出现SQL注入。")]),t._v(" "),a("h3",{attrs:{id:"_2-table和column"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-table和column"}},[t._v("#")]),t._v(" 2. "),a("code",[t._v("Table")]),t._v("和"),a("code",[t._v("Column")])]),t._v(" "),a("p",[t._v("这两个对象主要是描述数据库表结构的，暂时和ORM本身没啥关系，只是当你想获得一些字段信息的时候，这样来获得表结构信息：")]),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 获得当前库的所有表的表名")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("List")]),a("span",{pre:!0,attrs:{class:"token generics"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" tableNames "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MetaUtil")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getTables")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("dataSource"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("info")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"{}"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" tableNames"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*\n * 获得表结构 表结构封装为一个表对象，里面有Column对象表示一列，列中有列名、类型、大小、是否允许为空等信息\n */")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Table")]),t._v(" table "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MetaUtil")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getTableMeta")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("dataSource"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("TABLE_NAME")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("info")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"{}"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" table"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])])])}),[],!1,null,null,null);a.default=e.exports}}]);