(window.webpackJsonp=window.webpackJsonp||[]).push([[144],{470:function(a,t,s){"use strict";s.r(t);var n=s(7),e=Object(n.a)({},(function(){var a=this,t=a._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[t("h2",{attrs:{id:"释义"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#释义"}},[a._v("#")]),a._v(" 释义")]),a._v(" "),t("p",[a._v("数据源（DataSource）的概念来自于JDBC规范中，一个数据源表示针对一个数据库（或者集群）的描述，从数据源中我们可以获得N个数据库连接，从而对数据库进行操作。")]),a._v(" "),t("p",[a._v("每一个开源JDBC连接池都有对DataSource的实现，比如Druid为DruidDataSource，Hikari为HikariDataSource。但是各大连接池配置各不相同，配置文件也不一样，Hutool的针对常用的连接池做了封装，最大限度简化和提供一致性配置。")]),a._v(" "),t("p",[a._v("Hutool的解决方案是：在ClassPath中使用"),t("code",[a._v("config/db.setting")]),a._v("一个配置文件，配置所有种类连接池的数据源，然后使用"),t("code",[a._v("DsFactory.get()")]),a._v("方法自动识别数据源以及自动注入配置文件中的连接池配置（包括数据库连接配置）。"),t("code",[a._v("DsFactory")]),a._v("通过"),t("code",[a._v("try")]),a._v("的方式按照顺序检测项目中引入的jar包来甄别用户使用的是哪种连接池，从而自动构建相应的数据源。")]),a._v(" "),t("p",[a._v("Hutool支持以下连接池，并按照其顺序检测存在与否：")]),a._v(" "),t("ol",[t("li",[a._v("HikariCP")]),a._v(" "),t("li",[a._v("Druid")]),a._v(" "),t("li",[a._v("Tomcat")]),a._v(" "),t("li",[a._v("Dbcp")]),a._v(" "),t("li",[a._v("C3p0")])]),a._v(" "),t("p",[a._v("在没有引入任何连接池的情况下，Hutool会使用其内置的连接池：Hutool Pooled（简易连接池，不推荐在线上环境使用）。")]),a._v(" "),t("h2",{attrs:{id:"基本使用"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#基本使用"}},[a._v("#")]),a._v(" 基本使用")]),a._v(" "),t("h3",{attrs:{id:"_1-引入连接池的jar"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-引入连接池的jar"}},[a._v("#")]),a._v(" 1. 引入连接池的jar")]),a._v(" "),t("p",[a._v("Hutool不会强依赖于任何第三方库，在Hutool支持的连接池范围内，用户需自行选择自己喜欢的连接池并引入。")]),a._v(" "),t("h3",{attrs:{id:"_2-编写配置文件"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-编写配置文件"}},[a._v("#")]),a._v(" 2. 编写配置文件")]),a._v(" "),t("p",[a._v("Maven项目中，在"),t("code",[a._v("src/main/resources/config")]),a._v("下创建文件"),t("code",[a._v("db.setting")]),a._v("，编写配置文件即可。这个配置文件位置就是Hutool与用户间的一个约定（符合约定大于配置的原则）：")]),a._v(" "),t("p",[a._v("配置文件分为两部分")]),a._v(" "),t("h4",{attrs:{id:"_1-基本连接信息"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-基本连接信息"}},[a._v("#")]),a._v(" 1. 基本连接信息")]),a._v(" "),t("div",{staticClass:"language-java extra-class"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[a._v("## 基本配置信息\n# "),t("span",{pre:!0,attrs:{class:"token constant"}},[a._v("JDBC")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token constant"}},[a._v("URL")]),a._v("，根据不同的数据库，使用相应的"),t("span",{pre:!0,attrs:{class:"token constant"}},[a._v("JDBC")]),a._v("连接字符串\nurl "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" jdbc"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v("mysql"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("/")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("/")]),t("span",{pre:!0,attrs:{class:"token generics"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("<")]),a._v("host"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),t("span",{pre:!0,attrs:{class:"token generics"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("<")]),a._v("port"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("/")]),t("span",{pre:!0,attrs:{class:"token generics"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("<")]),a._v("database_name"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("\n# 用户名，此处也可以使用 user 代替\nusername "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" 用户名\n# 密码，此处也可以使用 pass 代替\npassword "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" 密码\n# "),t("span",{pre:!0,attrs:{class:"token constant"}},[a._v("JDBC")]),a._v("驱动名，可选（"),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Hutool")]),a._v("会自动识别）\ndriver "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[t("span",{pre:!0,attrs:{class:"token namespace"}},[a._v("com"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("mysql"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("jdbc"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")])]),a._v("Driver")]),a._v("\n")])])]),t("blockquote",[t("p",[t("strong",[a._v("小提示")]),a._v("\n其中driver是可选的，Hutool会根据url自动加载相应的Driver类。基本连接信息是所有连接池通用的，原则上，只有基本信息就可以成功连接并操作数据库。")])]),a._v(" "),t("h4",{attrs:{id:"_2-连接池特有配置信息"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-连接池特有配置信息"}},[a._v("#")]),a._v(" 2. 连接池特有配置信息")]),a._v(" "),t("p",[a._v("针对不同的连接池，除了基本信息外的配置都各不相同，Hutool针对不同的连接池封装了其配置项，可以在项目的"),t("code",[a._v("src/test/resources/example")]),a._v("中看到针对不同连接池的配置文件样例。")]),a._v(" "),t("p",[a._v("我们以HikariCP为例：")]),a._v(" "),t("div",{staticClass:"language-java extra-class"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[a._v("# 自动提交\nautoCommit "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token boolean"}},[a._v("true")]),a._v("\n# 等待连接池分配连接的最大时长（毫秒），超过这个时长还没可用的连接则发生"),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("SQLException")]),a._v("， 缺省"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("30")]),a._v("秒\nconnectionTimeout "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("30000")]),a._v("\n# 一个连接idle状态的最大时长（毫秒），超时则被释放（retired），缺省"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("10")]),a._v("分钟\nidleTimeout "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("600000")]),a._v("\n# 一个连接的生命时长（毫秒），超时而且没被使用则被释放（retired），缺省"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("30")]),a._v("分钟，建议设置比数据库超时时长少"),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("30")]),a._v("秒，参考"),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("MySQL")]),a._v(" wait_timeout参数（show variables like '"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("%")]),a._v("timeout"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("%")]),a._v("'"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("）\nmaxLifetime "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("1800000")]),a._v("\n# 获取连接前的测试"),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("SQL")]),a._v("\nconnectionTestQuery "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token constant"}},[a._v("SELECT")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("1")]),a._v("\n# 最小闲置连接数\nminimumIdle "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("10")]),a._v("\n# 连接池中允许的最大连接数。缺省值："),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("10")]),a._v("；推荐的公式："),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("core_count "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("*")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("2")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("+")]),a._v(" effective_spindle_count"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\nmaximumPoolSize "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("10")]),a._v("\n# 连接只读数据库时配置为"),t("span",{pre:!0,attrs:{class:"token boolean"}},[a._v("true")]),a._v("， 保证安全\nreadOnly "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token boolean"}},[a._v("false")]),a._v("\n")])])]),t("h3",{attrs:{id:"_3-获取数据源"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-获取数据源"}},[a._v("#")]),a._v(" 3. 获取数据源")]),a._v(" "),t("div",{staticClass:"language-java extra-class"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("//获取默认数据源")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("DataSource")]),a._v(" ds "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("DSFactory")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("get")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n")])])]),t("p",[a._v("是滴，就是这么简单，一个简单的方法，可以识别数据源并读取默认路径("),t("code",[a._v("config/db.setting")]),a._v(")下信息从而获取数据源。")]),a._v(" "),t("h3",{attrs:{id:"_4-直接创建数据源"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-直接创建数据源"}},[a._v("#")]),a._v(" 4. 直接创建数据源")]),a._v(" "),t("p",[a._v("当然你依旧可以按照连接池本身的方式获取数据源对象。我们以Druid为例：")]),a._v(" "),t("div",{staticClass:"language-java extra-class"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("//具体的配置参数请参阅Druid官方文档")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("DruidDataSource")]),a._v(" ds2 "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("new")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("DruidDataSource")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\nds2"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("setUrl")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"jdbc:mysql://localhost:3306/dbName"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\nds2"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("setUsername")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"root"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\nds2"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("setPassword")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"123456"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n")])])]),t("h3",{attrs:{id:"_5-创建简单数据源"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_5-创建简单数据源"}},[a._v("#")]),a._v(" 5. 创建简单数据源")]),a._v(" "),t("p",[a._v("有时候我们的操作非常简单，亦或者只是测试下远程数据库是否畅通，我们可以使用Hutool提供的"),t("code",[a._v("SimpleDataSource")]),a._v(":")]),a._v(" "),t("div",{staticClass:"language-java extra-class"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("DataSource")]),a._v(" ds "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("new")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("SimpleDataSource")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"jdbc:mysql://localhost:3306/dbName"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"root"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"123456"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n")])])]),t("p",[a._v("SimpleDataSource只是"),t("code",[a._v("DriverManager.getConnection")]),a._v("的简单包装，本身并不支持池化功能，此类特别适合少量数据库连接的操作。")]),a._v(" "),t("p",[a._v("同样的，SimpleDataSource也支持默认配置文件：")]),a._v(" "),t("div",{staticClass:"language-java extra-class"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("DataSource")]),a._v(" ds "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("new")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("SimpleDataSource")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n")])])]),t("h2",{attrs:{id:"高级实用"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#高级实用"}},[a._v("#")]),a._v(" 高级实用")]),a._v(" "),t("h3",{attrs:{id:"_1-自定义连接池"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-自定义连接池"}},[a._v("#")]),a._v(" 1. 自定义连接池")]),a._v(" "),t("p",[a._v("有时候当项目引入多种数据源时，我们希望自定义需要的连接池，此时可以：")]),a._v(" "),t("div",{staticClass:"language-java extra-class"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("//自定义连接池实现为Tomcat-pool")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("DSFactory")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("setCurrentDSFactory")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("new")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("TomcatDSFactory")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("DataSource")]),a._v(" ds "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("DSFactory")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("get")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n")])])]),t("p",[a._v("需要注意的是，"),t("code",[a._v("DSFactory.setCurrentDSFactory")]),a._v("是一个全局方法，必须在所有获取数据源的时机之前调用，调用一次即可（例如项目启动）。")]),a._v(" "),t("h3",{attrs:{id:"_2-自定义配置文件"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-自定义配置文件"}},[a._v("#")]),a._v(" 2. 自定义配置文件")]),a._v(" "),t("p",[a._v("有时候由于项目规划的问题，我们希望自定义数据库配置Setting的位置，甚至是动态加载Setting对象，此时我们可以使用以下方法从其它的Setting对象中获取数据库连接信息：")]),a._v(" "),t("div",{staticClass:"language-java extra-class"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("//自定义数据库Setting，更多实用请参阅Hutool-Setting章节")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Setting")]),a._v(" setting "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("new")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Setting")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"otherPath/other.setting"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("//获取指定配置，第二个参数为分组，用于多数据源，无分组情况下传null")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// 注意此处DSFactory需要复用或者关闭")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("DataSource")]),a._v(" ds "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("DSFactory")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("create")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("setting"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("getDataSource")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n")])])]),t("h3",{attrs:{id:"_3-多数据源"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-多数据源"}},[a._v("#")]),a._v(" 3. 多数据源")]),a._v(" "),t("p",[a._v("有的时候我们需要操作不同的数据库，也有可能我们需要针对线上、开发和测试分别操作其数据库，无论哪种情况，Hutool都针对多数据源做了很棒的支持。")]),a._v(" "),t("p",[a._v("多数据源有两种方式可以实现：")]),a._v(" "),t("h4",{attrs:{id:"_1-多个配置文件分别获得数据源"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-多个配置文件分别获得数据源"}},[a._v("#")]),a._v(" 1. 多个配置文件分别获得数据源")]),a._v(" "),t("p",[a._v("就是按照自定义配置文件的方式读取多个配置文件即可。")]),a._v(" "),t("h4",{attrs:{id:"_2-在同一配置文件中使用分组隔离不同的数据源配置"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-在同一配置文件中使用分组隔离不同的数据源配置"}},[a._v("#")]),a._v(" 2. 在同一配置文件中使用分组隔离不同的数据源配置：")]),a._v(" "),t("div",{staticClass:"language-java extra-class"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("group_db1"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v("\nurl "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" jdbc"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v("mysql"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("/")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("/")]),t("span",{pre:!0,attrs:{class:"token generics"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("<")]),a._v("host"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),t("span",{pre:!0,attrs:{class:"token generics"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("<")]),a._v("port"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("/")]),t("span",{pre:!0,attrs:{class:"token generics"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("<")]),a._v("database_name"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("\nusername "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" 用户名\npassword "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" 密码\n\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("group_db2"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v("\nurl "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" jdbc"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v("mysql"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("/")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("/")]),t("span",{pre:!0,attrs:{class:"token generics"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("<")]),a._v("host2"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),t("span",{pre:!0,attrs:{class:"token generics"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("<")]),a._v("port"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("/")]),t("span",{pre:!0,attrs:{class:"token generics"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("<")]),a._v("database_name"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("\nusername "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" 用户名\npassword "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" 密码\n")])])]),t("p",[a._v("我们按照上面的方式编写"),t("code",[a._v("db.setting")]),a._v("文件，然后：")]),a._v(" "),t("div",{staticClass:"language-java extra-class"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("DataSource")]),a._v(" ds1 "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("DSFactory")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("get")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"group_db1"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("DataSource")]),a._v(" ds2 "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("DSFactory")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("get")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"group_db2"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n")])])]),t("p",[a._v("这样我们就可以在一个配置文件中实现多数据源的配置。")]),a._v(" "),t("h2",{attrs:{id:"结语"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#结语"}},[a._v("#")]),a._v(" 结语")]),a._v(" "),t("p",[a._v("Hutool通过多种方式获取DataSource对象，获取后除了可以在Hutool自身应用外，还可以将此对象传入不同的框架以实现无缝结合。")]),a._v(" "),t("p",[a._v("Hutool对数据源的封装很好的诠释了以下几个原则：")]),a._v(" "),t("ol",[t("li",[a._v("自动识别优于用户定义")]),a._v(" "),t("li",[a._v("便捷性与灵活性并存")]),a._v(" "),t("li",[a._v("适配与兼容")])])])}),[],!1,null,null,null);t.default=e.exports}}]);