(window.webpackJsonp=window.webpackJsonp||[]).push([[79],{407:function(a,t,e){"use strict";e.r(t);var s=e(7),v=Object(s.a)({},(function(){var a=this,t=a._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[t("h2",{attrs:{id:"由来"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#由来"}},[a._v("#")]),a._v(" 由来")]),a._v(" "),t("p",[a._v("最早Map的相关工具是被包含在CollUtil中的，但是考虑到Map和集合非同一类数据结构，因此独立出来，且Hutool封装了许多自定义的Map类，因此单独成包。")]),a._v(" "),t("h2",{attrs:{id:"使用"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#使用"}},[a._v("#")]),a._v(" 使用")]),a._v(" "),t("h3",{attrs:{id:"特殊map"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#特殊map"}},[a._v("#")]),a._v(" 特殊Map")]),a._v(" "),t("ul",[t("li",[t("p",[t("code",[a._v("CaseInsensitiveMap")]),a._v(' 忽略大小写的Map,对KEY忽略大小写，get("Value")和get("value")获得的值相同，put进入的值也会被覆盖')])]),a._v(" "),t("li",[t("p",[t("code",[a._v("CaseInsensitiveLinkedMap")]),a._v(' 忽略大小写的LinkedHashMap,对KEY忽略大小写，get("Value")和get("value")获得的值相同，put进入的值也会被覆盖')])]),a._v(" "),t("li",[t("p",[t("code",[a._v("MapBuilder")]),a._v(" Map创建器，可以链式创建Map")])]),a._v(" "),t("li",[t("p",[t("code",[a._v("MapProxy")]),a._v(" Map代理类，通过代理包装Map，提供一系列的getXXX方法")])])]),a._v(" "),t("h3",{attrs:{id:"工具"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#工具"}},[a._v("#")]),a._v(" 工具")]),a._v(" "),t("ul",[t("li",[t("code",[a._v("MapUtil")]),a._v(" 提供对Map常用操作的封装")])])])}),[],!1,null,null,null);t.default=v.exports}}]);