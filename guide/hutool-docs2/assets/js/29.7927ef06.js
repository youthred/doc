(window.webpackJsonp=window.webpackJsonp||[]).push([[29],{358:function(t,s,a){"use strict";a.r(s);var n=a(7),e=Object(n.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h2",{attrs:{id:"由来"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#由来"}},[t._v("#")]),t._v(" 由来")]),t._v(" "),s("p",[t._v("这个工具的用处类似于"),s("a",{attrs:{href:"http://commons.apache.org/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Apache Commons Lang"),s("OutboundLink")],1),t._v("中的"),s("code",[t._v("StringUtil")]),t._v("，之所以使用"),s("code",[t._v("StrUtil")]),t._v("而不是使用"),s("code",[t._v("StringUtil")]),t._v("是因为前者更短，而且"),s("code",[t._v("Str")]),t._v("这个简写我想已经深入人心了，大家都知道是字符串的意思。常用的方法例如"),s("code",[t._v("isBlank")]),t._v("、"),s("code",[t._v("isNotBlank")]),t._v("、"),s("code",[t._v("isEmpty")]),t._v("、"),s("code",[t._v("isNotEmpty")]),t._v("这些我就不做介绍了，判断字符串是否为空，下面我说几个比较好用的功能。")]),t._v(" "),s("h2",{attrs:{id:"方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#方法"}},[t._v("#")]),t._v(" 方法")]),t._v(" "),s("h3",{attrs:{id:"_1-hasblank、hasempty方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-hasblank、hasempty方法"}},[t._v("#")]),t._v(" 1. "),s("code",[t._v("hasBlank")]),t._v("、"),s("code",[t._v("hasEmpty")]),t._v("方法")]),t._v(" "),s("p",[t._v("就是给定一些字符串，如果一旦有空的就返回true，常用于判断好多字段是否有空的（例如web表单数据）。")]),t._v(" "),s("p",[s("strong",[t._v("这两个方法的区别是"),s("code",[t._v("hasEmpty")]),t._v('只判断是否为null或者空字符串（""），'),s("code",[t._v("hasBlank")]),t._v("则会把不可见字符也算做空，"),s("code",[t._v("isEmpty")]),t._v("和"),s("code",[t._v("isBlank")]),t._v("同理。")])]),t._v(" "),s("h3",{attrs:{id:"_2-removeprefix、removesuffix方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-removeprefix、removesuffix方法"}},[t._v("#")]),t._v(" 2. "),s("code",[t._v("removePrefix")]),t._v("、"),s("code",[t._v("removeSuffix")]),t._v("方法")]),t._v(" "),s("p",[t._v("这两个是去掉字符串的前缀后缀的，例如去个文件名的扩展名啥。")]),t._v(" "),s("div",{staticClass:"language-Java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" fileName "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("StrUtil")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("removeSuffix")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"pretty_girl.jpg"/*tpa=https://doc.hutool.cn/assets/js/pretty_girl.jpg*/')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('".jpg"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//fileName -> pretty_girl")]),t._v("\n")])])]),s("p",[t._v("还有忽略大小写的"),s("code",[t._v("removePrefixIgnoreCase")]),t._v("和"),s("code",[t._v("removeSuffixIgnoreCase")]),t._v("都比较实用。")]),t._v(" "),s("h3",{attrs:{id:"_3-sub方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-sub方法"}},[t._v("#")]),t._v(" 3. "),s("code",[t._v("sub")]),t._v("方法")]),t._v(" "),s("p",[t._v("不得不提一下这个方法，有人说String有了subString你还写它干啥，我想说subString方法越界啥的都会报异常，你还得自己判断，难受死了，我把各种情况判断都加进来了，而且index的位置还支持负数哦，-1表示最后一个字符前（这个思想来自于"),s("a",{attrs:{href:"https://www.python.org/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Python"),s("OutboundLink")],1),t._v("，如果学过"),s("a",{attrs:{href:"https://www.python.org/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Python"),s("OutboundLink")],1),t._v("的应该会很喜欢的），还有就是如果不小心把第一个位置和第二个位置搞反了，也会自动修正（例如想截取第4个和第2个字符之间的部分也是可以的哦~）\n举个栗子")]),t._v(" "),s("div",{staticClass:"language-Java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" str "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"abcdefgh"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" strSub1 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("StrUtil")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sub")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("str"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//strSub1 -> c")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" strSub2 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("StrUtil")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sub")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("str"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//strSub2 -> cde")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" strSub3 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("StrUtil")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sub")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("str"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//strSub2 -> c")]),t._v("\n")])])]),s("p",[t._v("需要注意的是，"),s("code",[t._v("-1")]),t._v("表示最后一个字符，但是因为"),s("code",[t._v("sub")]),t._v("方法的结束index是不包含的，因此传"),s("code",[t._v("-1")]),t._v("最后一个字符是取不到的：")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" str "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"abcdefgh"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" strSub1 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("StrUtil")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sub")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("str"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// cdefg")]),t._v("\n")])])]),s("p",[t._v("如果想截取后半段，可以使用"),s("code",[t._v("StrUtil.subSuf")]),t._v("方法。")]),t._v(" "),s("h3",{attrs:{id:"_4-str、bytes方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-str、bytes方法"}},[t._v("#")]),t._v(" 4. "),s("code",[t._v("str")]),t._v("、"),s("code",[t._v("bytes")]),t._v("方法")]),t._v(" "),s("p",[t._v("好吧，我承认把"),s("code",[t._v("String.getByte(String charsetName)")]),t._v("方法封装在这里了，原生的"),s("code",[t._v("String.getByte()")]),t._v("这个方法太坑了，使用系统编码，经常会有人跳进来导致乱码问题，所以我就加了这两个方法强制指定字符集了，包了个try抛出一个运行时异常，省的我得在我业务代码里处理那个恶心的"),s("code",[t._v("UnsupportedEncodingException")]),t._v("。")]),t._v(" "),s("h3",{attrs:{id:"_5-format方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-format方法"}},[t._v("#")]),t._v(" 5. format方法")]),t._v(" "),s("p",[t._v("我会告诉你这是我最引以为豪的方法吗？灵感来自slf4j，可以使用字符串模板代替字符串拼接，我也自己实现了一个，而且变量的标识符都一样，神马叫无缝兼容~~来，上栗子（吃多了上火吧……）")]),t._v(" "),s("div",{staticClass:"language-Java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" template "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"{}爱{}，就像老鼠爱大米"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" str "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("StrUtil")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("format")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("template"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"我"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"你"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//str -> 我爱你，就像老鼠爱大米")]),t._v("\n")])])]),s("p",[t._v("参数我定义成了Object类型，如果传别的类型的也可以，会自动调用toString()方法的。")]),t._v(" "),s("h3",{attrs:{id:"_6-定义的一些常量"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_6-定义的一些常量"}},[t._v("#")]),t._v(" 6. 定义的一些常量")]),t._v(" "),s("p",[t._v("为了方便，我定义了一些比较常见的字符串常量在里面，像点、空串、换行符等等，还有HTML中的一些转义字符。")]),t._v(" "),s("p",[t._v("更多方法请参阅API文档。")])])}),[],!1,null,null,null);s.default=e.exports}}]);