(window.webpackJsonp=window.webpackJsonp||[]).push([[145],{472:function(e,t,n){"use strict";n.r(t);var a=n(7),i=Object(a.a)({},(function(){var e=this,t=e._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h2",{attrs:{id:"介绍"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#介绍"}},[e._v("#")]),e._v(" 介绍")]),e._v(" "),t("p",[e._v("DsFactory默认读取的配置文件是config/db.setting或db.setting，db.setting的配置包括两部分：基本连接信息和连接池配置信息。")]),e._v(" "),t("p",[e._v("基本连接信息所有连接池都支持，连接池配置信息根据不同的连接池，连接池配置是根据连接池相应的配置项移植而来。")]),e._v(" "),t("h2",{attrs:{id:"基本配置样例"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#基本配置样例"}},[e._v("#")]),e._v(" 基本配置样例")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("#------------------------------------------------------------------------------------------\n## 基本配置信息\n# JDBC URL，根据不同的数据库，使用相应的JDBC连接字符串\nurl = jdbc:mysql://<host>:<port>/<database_name>\n# 用户名，此处也可以使用 user 代替\nusername = 用户名\n# 密码，此处也可以使用 pass 代替\npassword = 密码\n# JDBC驱动名，可选（Hutool会自动识别）\ndriver = com.mysql.jdbc.Driver\n\n## 可选配置\n# 是否在日志中显示执行的SQL\nshowSql = true\n# 是否格式化显示的SQL\nformatSql = false\n# 是否显示SQL参数\nshowParams = true\n# 打印SQL的日志等级，默认debug\nsqlLevel = debug\n#------------------------------------------------------------------------------------------\n")])])]),t("h2",{attrs:{id:"hikaricp"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#hikaricp"}},[e._v("#")]),e._v(" HikariCP")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("## 连接池配置项\n# 自动提交\nautoCommit = true\n# 等待连接池分配连接的最大时长（毫秒），超过这个时长还没可用的连接则发生SQLException， 缺省:30秒\nconnectionTimeout = 30000\n# 一个连接idle状态的最大时长（毫秒），超时则被释放（retired），缺省:10分钟\nidleTimeout = 600000\n# 一个连接的生命时长（毫秒），超时而且没被使用则被释放（retired），缺省:30分钟，建议设置比数据库超时时长少30秒，参考MySQL wait_timeout参数（show variables like '%timeout%';）\nmaxLifetime = 1800000\n# 获取连接前的测试SQL\nconnectionTestQuery = SELECT 1\n# 最小闲置连接数\nminimumIdle = 10\n# 连接池中允许的最大连接数。缺省值：10；推荐的公式：((core_count * 2) + effective_spindle_count)\nmaximumPoolSize = 10\n# 连接只读数据库时配置为true， 保证安全\nreadOnly = false\n")])])]),t("h2",{attrs:{id:"druid"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#druid"}},[e._v("#")]),e._v(" Druid")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("# 初始化时建立物理连接的个数。初始化发生在显示调用init方法，或者第一次getConnection时\ninitialSize = 0\n# 最大连接池数量\nmaxActive = 8\n# 最小连接池数量\nminIdle = 0\n# 获取连接时最大等待时间，单位毫秒。配置了maxWait之后， 缺省启用公平锁，并发效率会有所下降， 如果需要可以通过配置useUnfairLock属性为true使用非公平锁。\nmaxWait = 0\n# 是否缓存preparedStatement，也就是PSCache。 PSCache对支持游标的数据库性能提升巨大，比如说oracle。 在mysql5.5以下的版本中没有PSCache功能，建议关闭掉。作者在5.5版本中使用PSCache，通过监控界面发现PSCache有缓存命中率记录， 该应该是支持PSCache。\npoolPreparedStatements = false\n# 要启用PSCache，必须配置大于0，当大于0时， poolPreparedStatements自动触发修改为true。 在Druid中，不会存在Oracle下PSCache占用内存过多的问题， 可以把这个数值配置大一些，比如说100\nmaxOpenPreparedStatements = -1\n# 用来检测连接是否有效的sql，要求是一个查询语句。 如果validationQuery为null，testOnBorrow、testOnReturn、 testWhileIdle都不会其作用。\nvalidationQuery = SELECT 1\n# 申请连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能。\ntestOnBorrow = true\n# 归还连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能\ntestOnReturn = false\n# 建议配置为true，不影响性能，并且保证安全性。 申请连接的时候检测，如果空闲时间大于 timeBetweenEvictionRunsMillis，执行validationQuery检测连接是否有效。\ntestWhileIdle = false\n# 有两个含义： 1) Destroy线程会检测连接的间隔时间 2) testWhileIdle的判断依据，详细看testWhileIdle属性的说明\ntimeBetweenEvictionRunsMillis = 60000\n# 物理连接初始化的时候执行的sql\nconnectionInitSqls = SELECT 1\n# 属性类型是字符串，通过别名的方式配置扩展插件， 常用的插件有： 监控统计用的filter:stat  日志用的filter:log4j 防御sql注入的filter:wall\nfilters = stat\n# 类型是List<com.alibaba.druid.filter.Filter>， 如果同时配置了filters和proxyFilters， 是组合关系，并非替换关系\nproxyFilters = \n")])])]),t("h2",{attrs:{id:"tomcat-jdbc-pool"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#tomcat-jdbc-pool"}},[e._v("#")]),e._v(" Tomcat JDBC Pool")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("# (boolean) 连接池创建的连接的默认的auto-commit 状态\ndefaultAutoCommit = true\n# (boolean) 连接池创建的连接的默认的read-only 状态。 如果没有设置则setReadOnly 方法将不会被调用。 ( 某些驱动不支持只读模式， 比如：Informix)\ndefaultReadOnly = false\n# (String) 连接池创建的连接的默认的TransactionIsolation 状态。 下面列表当中的某一个： ( 参考javadoc) NONE READ_COMMITTED EAD_UNCOMMITTED REPEATABLE_READ SERIALIZABLE\ndefaultTransactionIsolation = NONE\n# (int) 初始化连接： 连接池启动时创建的初始化连接数量，1。2 版本后支持\ninitialSize = 10\n# (int) 最大活动连接： 连接池在同一时间能够分配的最大活动连接的数量， 如果设置为非正数则表示不限制\nmaxActive = 100\n# (int) 最大空闲连接： 连接池中容许保持空闲状态的最大连接数量， 超过的空闲连接将被释放， 如果设置为负数表示不限制 如果启用，将定期检查限制连接，如果空闲时间超过minEvictableIdleTimeMillis 则释放连接 （ 参考testWhileIdle ）\nmaxIdle = 8\n# (int) 最小空闲连接： 连接池中容许保持空闲状态的最小连接数量， 低于这个数量将创建新的连接， 如果设置为0 则不创建 如果连接验证失败将缩小这个值（ 参考testWhileIdle ）\nminIdle = 0\n# (int) 最大等待时间： 当没有可用连接时， 连接池等待连接被归还的最大时间( 以毫秒计数)， 超过时间则抛出异常， 如果设置为-1 表示无限等待\nmaxWait = 30000\n# (String) SQL 查询， 用来验证从连接池取出的连接， 在将连接返回给调用者之前。 如果指定， 则查询必须是一个SQL SELECT 并且必须返回至少一行记录 查询不必返回记录，但这样将不能抛出SQL异常\nvalidationQuery = SELECT 1\n# (boolean) 指明是否在从池中取出连接前进行检验， 如果检验失败， 则从池中去除连接并尝试取出另一个。注意： 设置为true 后如果要生效，validationQuery 参数必须设置为非空字符串 参考validationInterval以获得更有效的验证\ntestOnBorrow = false\n# (boolean) 指明是否在归还到池中前进行检验 注意： 设置为true 后如果要生效，validationQuery 参数必须设置为非空字符串\ntestOnReturn = false\n# (boolean) 指明连接是否被空闲连接回收器( 如果有) 进行检验。 如果检测失败， 则连接将被从池中去除。注意： 设置为true 后如果要生效，validationQuery 参数必须设置为非空字符串\ntestWhileIdle = false\n")])])]),t("h2",{attrs:{id:"c3p0-不推荐"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#c3p0-不推荐"}},[e._v("#")]),e._v(" C3P0（不推荐）")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("# 连接池中保留的最大连接数。默认值: 15\nmaxPoolSize = 15\n# 连接池中保留的最小连接数，默认为：3\nminPoolSize = 3\n# 初始化连接池中的连接数，取值应在minPoolSize与maxPoolSize之间，默认为3\ninitialPoolSize = 3\n# 最大空闲时间，60秒内未使用则连接被丢弃。若为0则永不丢弃。默认值: 0\nmaxIdleTime = 0\n# 当连接池连接耗尽时，客户端调用getConnection()后等待获取新连接的时间，超时后将抛出SQLException，如设为0则无限期等待。单位毫秒。默认: 0\ncheckoutTimeout = 0\n# 当连接池中的连接耗尽的时候c3p0一次同时获取的连接数。默认值: 3\nacquireIncrement = 3\n# 定义在从数据库获取新连接失败后重复尝试的次数。默认值: 30 ；小于等于0表示无限次\nacquireRetryAttempts = 0\n# 重新尝试的时间间隔，默认为：1000毫秒\nacquireRetryDelay = 1000\n# 关闭连接时，是否提交未提交的事务，默认为false，即关闭连接，回滚未提交的事务\nautoCommitOnClose = false\n# c3p0将建一张名为Test的空表，并使用其自带的查询语句进行测试。如果定义了这个参数那么属性preferredTestQuery将被忽略。你不能在这张Test表上进行任何操作，它将只供c3p0测试使用。默认值: null\nautomaticTestTable = null\n# 如果为false，则获取连接失败将会引起所有等待连接池来获取连接的线程抛出异常，但是数据源仍有效保留，并在下次调用getConnection()的时候继续尝试获取连接。如果设为true，那么在尝试获取连接失败后该数据源将申明已断开并永久关闭。默认: false\nbreakAfterAcquireFailure = false\n# 检查所有连接池中的空闲连接的检查频率。默认值: 0，不检查\nidleConnectionTestPeriod = 0\n# c3p0全局的PreparedStatements缓存的大小。如果maxStatements与maxStatementsPerConnection均为0，则缓存不生效，只要有一个不为0，则语句的缓存就能生效。如果默认值: 0\nmaxStatements = 0\n# maxStatementsPerConnection定义了连接池内单个连接所拥有的最大缓存statements数。默认值: 0\nmaxStatementsPerConnection = 0\n")])])]),t("h2",{attrs:{id:"dbcp-不推荐"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#dbcp-不推荐"}},[e._v("#")]),e._v(" DBCP（不推荐）")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("# (boolean) 连接池创建的连接的默认的auto-commit 状态\ndefaultAutoCommit = true\n# (boolean) 连接池创建的连接的默认的read-only 状态。 如果没有设置则setReadOnly 方法将不会被调用。 ( 某些驱动不支持只读模式， 比如：Informix)\ndefaultReadOnly = false\n# (String) 连接池创建的连接的默认的TransactionIsolation 状态。 下面列表当中的某一个： ( 参考javadoc) NONE READ_COMMITTED EAD_UNCOMMITTED REPEATABLE_READ SERIALIZABLE\ndefaultTransactionIsolation = NONE\n# (int) 初始化连接： 连接池启动时创建的初始化连接数量，1。2 版本后支持\ninitialSize = 10\n# (int) 最大活动连接： 连接池在同一时间能够分配的最大活动连接的数量， 如果设置为非正数则表示不限制\nmaxActive = 100\n# (int) 最大空闲连接： 连接池中容许保持空闲状态的最大连接数量， 超过的空闲连接将被释放， 如果设置为负数表示不限制 如果启用，将定期检查限制连接，如果空闲时间超过minEvictableIdleTimeMillis 则释放连接 （ 参考testWhileIdle ）\nmaxIdle = 8\n# (int) 最小空闲连接： 连接池中容许保持空闲状态的最小连接数量， 低于这个数量将创建新的连接， 如果设置为0 则不创建 如果连接验证失败将缩小这个值（ 参考testWhileIdle ）\nminIdle = 0\n# (int) 最大等待时间： 当没有可用连接时， 连接池等待连接被归还的最大时间( 以毫秒计数)， 超过时间则抛出异常， 如果设置为-1 表示无限等待\nmaxWait = 30000\n# (String) SQL 查询， 用来验证从连接池取出的连接， 在将连接返回给调用者之前。 如果指定， 则查询必须是一个SQL SELECT 并且必须返回至少一行记录 查询不必返回记录，但这样将不能抛出SQL异常\nvalidationQuery = SELECT 1\n# (boolean) 指明是否在从池中取出连接前进行检验， 如果检验失败， 则从池中去除连接并尝试取出另一个。注意： 设置为true 后如果要生效，validationQuery 参数必须设置为非空字符串 参考validationInterval以获得更有效的验证\ntestOnBorrow = false\n# (boolean) 指明是否在归还到池中前进行检验 注意： 设置为true 后如果要生效，validationQuery 参数必须设置为非空字符串\ntestOnReturn = false\n# (boolean) 指明连接是否被空闲连接回收器( 如果有) 进行检验。 如果检测失败， 则连接将被从池中去除。注意： 设置为true 后如果要生效，validationQuery 参数必须设置为非空字符串\ntestWhileIdle = false\n")])])])])}),[],!1,null,null,null);t.default=i.exports}}]);