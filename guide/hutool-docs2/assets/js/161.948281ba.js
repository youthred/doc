(window.webpackJsonp=window.webpackJsonp||[]).push([[161],{488:function(t,r,a){"use strict";a.r(r);var n=a(7),o=Object(n.a)({},(function(){var t=this,r=t._self._c;return r("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[r("h2",{attrs:{id:"由来"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#由来"}},[t._v("#")]),t._v(" 由来")]),t._v(" "),r("p",[t._v("Java中定时任务使用的最多的我想就是"),r("a",{attrs:{href:"http://www.quartz-scheduler.org/",target:"_blank",rel:"noopener noreferrer"}},[t._v("quartz"),r("OutboundLink")],1),t._v("了，但是这个框架太过庞大，而且我也不需要用到这么多东西，使用方法也是比较复杂（官方Demo我实在是无语……）。")]),t._v(" "),r("p",[t._v("用过Linux的crontab的人都知道，使用其定时的表达式可以非常灵活的定义定时任务的时间以及频率（Linux的crontab精确到分，而Quartz的精确到秒，不过对我来说精确到分已经够用了，精确到秒的可以使用Timer可以搞定），然后就是crontab的那个迷人的配置文件，可以把定时任务很清晰的罗列出来，这个我也是比较喜欢的。（记得当时Spring整合Quartz的时候那XML看的我眼都花了……）。于是Hutool-cron诞生。")]),t._v(" "),r("h2",{attrs:{id:"介绍"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#介绍"}},[t._v("#")]),t._v(" 介绍")]),t._v(" "),r("p",[t._v("Hutool的定时任务模块与Linux的Crontab使用上非常类似，通过一个"),r("code",[t._v("cron.setting")]),t._v("配置文件，简单调用start()方法即可简单使用。")]),t._v(" "),r("p",[t._v("同时还提供了秒匹配和年匹配等Quartz才有的功能，定时任务表达式上也同时兼容Crontab（Cron4j）和Quartz的表达式。")])])}),[],!1,null,null,null);r.default=o.exports}}]);