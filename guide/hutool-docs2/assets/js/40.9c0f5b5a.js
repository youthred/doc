(window.webpackJsonp=window.webpackJsonp||[]).push([[40],{368:function(a,t,s){"use strict";s.r(t);var e=s(7),r=Object(e.a)({},(function(){var a=this,t=a._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[t("h2",{attrs:{id:"类处理工具-classutil"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#类处理工具-classutil"}},[a._v("#")]),a._v(" 类处理工具 "),t("code",[a._v("ClassUtil")])]),a._v(" "),t("p",[a._v("这个工具主要是封装了一些反射的方法，使调用更加方便。而这个类中最有用的方法是"),t("code",[a._v("scanPackage")]),a._v("方法，这个方法会扫描classpath下所有类，这个在Spring中是特性之一，主要为"),t("a",{attrs:{href:"https://github.com/looly/hulu",target:"_blank",rel:"noopener noreferrer"}},[a._v("Hulu"),t("OutboundLink")],1),a._v("框架中类扫描的一个基础。下面介绍下这个类中的方法。")]),a._v(" "),t("h3",{attrs:{id:"getshortclassname"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#getshortclassname"}},[a._v("#")]),a._v(" "),t("code",[a._v("getShortClassName")])]),a._v(" "),t("p",[a._v("获取完整类名的短格式如："),t("code",[a._v("cn.hutool.core.util.StrUtil")]),a._v(" -> "),t("code",[a._v("c.h.c.u.StrUtil")])]),a._v(" "),t("h3",{attrs:{id:"isallassignablefrom"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#isallassignablefrom"}},[a._v("#")]),a._v(" "),t("code",[a._v("isAllAssignableFrom")])]),a._v(" "),t("p",[a._v("比较判断types1和types2两组类，如果types1中所有的类都与types2对应位置的类相同，或者是其父类或接口，则返回true")]),a._v(" "),t("h3",{attrs:{id:"isprimitivewrapper"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#isprimitivewrapper"}},[a._v("#")]),a._v(" "),t("code",[a._v("isPrimitiveWrapper")])]),a._v(" "),t("p",[a._v("是否为包装类型")]),a._v(" "),t("h3",{attrs:{id:"isbasictype"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#isbasictype"}},[a._v("#")]),a._v(" "),t("code",[a._v("isBasicType")])]),a._v(" "),t("p",[a._v("是否为基本类型（包括包装类和原始类）")]),a._v(" "),t("h3",{attrs:{id:"getpackage"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#getpackage"}},[a._v("#")]),a._v(" "),t("code",[a._v("getPackage")])]),a._v(" "),t("p",[a._v("获得给定类所在包的名称，例如：\n"),t("code",[a._v("cn.hutool.util.ClassUtil")]),a._v(" -> "),t("code",[a._v("https://doc.hutool.cn/assets/js/cn.hutool.util")])]),a._v(" "),t("h3",{attrs:{id:"scanpackage方法"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#scanpackage方法"}},[a._v("#")]),a._v(" "),t("code",[a._v("scanPackage")]),a._v("方法")]),a._v(" "),t("p",[a._v("此方法唯一的参数是包的名称，返回结果为此包以及子包下所有的类。方法使用很简单，但是过程复杂一些，包扫描首先会调用 "),t("code",[a._v("getClassPaths")]),a._v("方法获得ClassPath，然后扫描ClassPath，如果是目录，扫描目录下的类文件，或者jar文件。如果是jar包，则直接从jar包中获取类名。这个方法的作用显而易见，就是要找出所有的类，在Spring中用于依赖注入，我在"),t("a",{attrs:{href:"https://github.com/looly/hulu",target:"_blank",rel:"noopener noreferrer"}},[a._v("Hulu"),t("OutboundLink")],1),a._v("中则用于找到Action类。当然，你也可以传一个"),t("code",[a._v("ClassFilter")]),a._v("对象，用于过滤不需要的类。")]),a._v(" "),t("h3",{attrs:{id:"getclasspaths方法"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#getclasspaths方法"}},[a._v("#")]),a._v(" "),t("code",[a._v("getClassPaths")]),a._v("方法")]),a._v(" "),t("p",[a._v("此方法是获得当前线程的ClassPath，核心是"),t("code",[a._v("Thread.currentThread().getContextClassLoader().getResources")]),a._v("的调用。")]),a._v(" "),t("h3",{attrs:{id:"getjavaclasspaths方法"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#getjavaclasspaths方法"}},[a._v("#")]),a._v(" "),t("code",[a._v("getJavaClassPaths")]),a._v("方法")]),a._v(" "),t("p",[a._v("此方法用于获得java的系统变量定义的ClassPath。")]),a._v(" "),t("h3",{attrs:{id:"getclassloader和getcontextclassloader方法"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#getclassloader和getcontextclassloader方法"}},[a._v("#")]),a._v(" "),t("code",[a._v("getClassLoader")]),a._v("和"),t("code",[a._v("getContextClassLoader")]),a._v("方法")]),a._v(" "),t("p",[a._v("后者只是获得当前线程的ClassLoader，前者在获取失败的时候获取"),t("code",[a._v("ClassUtil")]),a._v("这个类的ClassLoader。")]),a._v(" "),t("h3",{attrs:{id:"getdefaultvalue"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#getdefaultvalue"}},[a._v("#")]),a._v(" "),t("code",[a._v("getDefaultValue")])]),a._v(" "),t("p",[a._v("获取指定类型的默认值，默认值规则为：")]),a._v(" "),t("ol",[t("li",[a._v("如果为原始类型，返回0（boolean类型返回false）")]),a._v(" "),t("li",[a._v("非原始类型返回null")])]),a._v(" "),t("h3",{attrs:{id:"其它"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#其它"}},[a._v("#")]),a._v(" 其它")]),a._v(" "),t("p",[a._v("更多详细的方法描述见：")]),a._v(" "),t("p",[t("a",{attrs:{href:"https://apidoc.gitee.com/loolly/hutool/cn/hutool/core/util/ClassUtil.html",target:"_blank",rel:"noopener noreferrer"}},[a._v("https://apidoc.gitee.com/loolly/hutool/cn/hutool/core/util/ClassUtil.html"),t("OutboundLink")],1)])])}),[],!1,null,null,null);t.default=r.exports}}]);