const a={a1:"有些单位在不同的情境下有不同的含义。本章讨论与设备无关的像素、可缩放像素以及像素密度等概念的用法。",a2:"像素密度",a3:"与密度无关的像素（dp）",a4:"可缩放像素（sp）",a5:"为 dp 设计布局",a6:"图片缩放",a7:"每英寸所包含的像素数量被称为 “像素密度”。高密度的屏幕每英寸拥有的像素数量比低密度的要多。所以 UI 元素（比如按钮）在低密度的屏幕上看起来更大，而在高密度的屏幕上看起来更小。",a8:"屏幕分辨率则是屏幕内的像素总数。",a9:"屏幕密度 = 以像素为单位的屏幕宽度（或高度） / 以英寸为单位的屏幕宽度（或高度）",a10:"相关资源",a11:"支持多种屏幕",a12:"为不同屏幕密度的设备优化设计",a13:"更多资源类型",a14:"Android 支持的度量单位。",a15:"高密度屏幕",a16:"低密度屏幕",a17:'"与密度无关"指在不同密度的屏幕上显示相同的 UI 元素。',a18:"与密度无关的像素（发音为 “dips”）是一个灵活的单位，可以在任何屏幕上缩放到统一尺寸。开发 Android 应用时，使用 dp 在不同密度的屏幕上显示相同的元素。",a19:"1dp 等于密度为 160 的屏幕上的 1 个物理像素。dp 的计算方式为：",a20:"dp = （以像素为单位的宽度 * 160） / 屏幕密度",a21:"编写 CSS 时，不用管 dp 或 sp，统一使用 px，dp 只在 Android 开发时使用。",a22:"屏幕密度",a23:"以像素为单位的屏幕宽度",a24:"以与密度无关的像素为单位的屏幕宽度",a25:"如果你有 3 个 1.5 英寸宽的设备，即使屏幕密度不同，屏幕的宽度始终是 240dp。",a26:"在进行 Android 开发时，可缩放像素（sp）和 dp 功能一样，但仅用在字体上。1sp 的默认值和 1dp 一样。",a27:"sp 和 dp 的主要区别是 sp 保留了用户的字体设置。在辅助功能中设置了大号字体的用户会看到和他们的设置相匹配的字体大小。",a28:"为屏幕设计布局时，使用 dp 来计算元素的尺寸：",a29:"dp = （以像素为单位的宽度 * 160） / 像素密度",a30:"例如，32 x 32 px 的图标在 320 像素密度的屏幕上，等同于 16 x 16 dp。",a31:"通过使用以下比率，可以使图片在不同分辨率的屏幕上看起来一样：",a32:"屏幕分辨率",a33:"像素比例",a34:"图片尺寸（像素）",a35:"Material Design Android 图标",a36:"Material Design 中的高密度屏幕设计",a37:"Material Design 低密度屏幕示例",a38:"Material Design 中的与密度无关的像素（dp）"};export{a as zhCn};
